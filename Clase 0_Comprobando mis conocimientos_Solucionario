{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMOTHRwhSpMxrFo9GzSo/JN"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["#Prueba de evaluación de conocimientos"],"metadata":{"id":"EXSGt0iyE8vk"}},{"cell_type":"markdown","source":["##Tipo de datos\n","1. Numérico\n","- Entero: integer - int\n","- Decimal: float\n","2. Alfanumérico o cadena de caracteres. (String - str)\n","3. Lógico: Boolean - bool\n","4. Lista: list []\n","5. Diccionario: dict {}\n","\n","Para saber qué tipo de datos estamos manipulando, se usa la función type()"],"metadata":{"id":"KpdIF2vlFc58"}},{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"O0w-mthVEaRM","executionInfo":{"status":"ok","timestamp":1723575319243,"user_tz":300,"elapsed":246,"user":{"displayName":"Maria Alexandra Espinosa Carreno","userId":"05447541284278901609"}},"outputId":"23dd3c3d-4bdd-4241-d2cd-2cf3ed9382ce"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["17"]},"metadata":{},"execution_count":1}],"source":["5+3*4"]},{"cell_type":"code","source":["type(5+3*4)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EojR4B4iG0KW","executionInfo":{"status":"ok","timestamp":1723575524566,"user_tz":300,"elapsed":223,"user":{"displayName":"Maria Alexandra Espinosa Carreno","userId":"05447541284278901609"}},"outputId":"26f881d6-dd7b-4ced-cb09-c811c834e5a6"},"execution_count":2,"outputs":[{"output_type":"execute_result","data":{"text/plain":["int"]},"metadata":{},"execution_count":2}]},{"cell_type":"code","source":["print(f\"5+3*4={5+3*4} y da como resultado un valor de tipo {type(5+3*4)}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OQXvMmqQG5KC","executionInfo":{"status":"ok","timestamp":1723575610804,"user_tz":300,"elapsed":253,"user":{"displayName":"Maria Alexandra Espinosa Carreno","userId":"05447541284278901609"}},"outputId":"3836dcc4-c28f-4a0a-97c8-9c9b20926a90"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["5+3*4=17 y da como resultado un valor de tipo <class 'int'>\n"]}]},{"cell_type":"code","source":["#Cuando se usa + en strings, sucede la concatenación\n","\"5\"+\"3\"*2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"rovVxYTGHRc9","executionInfo":{"status":"ok","timestamp":1723575740656,"user_tz":300,"elapsed":266,"user":{"displayName":"Maria Alexandra Espinosa Carreno","userId":"05447541284278901609"}},"outputId":"f8e65667-35f0-472f-e011-cf2b97044a45"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'533'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":5}]},{"cell_type":"markdown","source":["2 ** 11 == 1000 or 2 ** 9 == 100"],"metadata":{"id":"TGxS4ATTIew6"}},{"cell_type":"code","source":["#= es asignación. == es comparación\n","2 ** 11 == 1000"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"oqOCeqbsIZ9Y","executionInfo":{"status":"ok","timestamp":1723576003017,"user_tz":300,"elapsed":237,"user":{"displayName":"Maria Alexandra Espinosa Carreno","userId":"05447541284278901609"}},"outputId":"12aa6a1b-20fa-4223-adf7-c501c83a8096"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["False"]},"metadata":{},"execution_count":6}]},{"cell_type":"markdown","source":["##Operaciones lógicas\n","1. Disyunción (o): Una proposición es verdadera, si al menos una de ella lo es. En python se puede enunciar con la palabra **or** o con **||**. Ejemplo: V OR V da V. V OR F da V. F OR V da V. F OR F da F.\n","2. Conjunción (y): Una preposición es verdadera, si Y SOLO SI, ambas preposiciones son verdaderas. En python, se utiliza la palabra **and** o **&&** para su uso. Ejemplo: F and F da F; F and V da F; V and F da F; V and V da V.\n","3. Negación (no): Niega el valor de verdad de una proposición. Si el valor de verdad es true, se vuelve false. En python se usa la palabra **not** o ~ para denotarla."],"metadata":{"id":"JFtCadhoI9hN"}},{"cell_type":"code","source":["a=2 ** 11 == 1000 or 2 ** 9 == 100"],"metadata":{"id":"kGPVu_NYI8H9","executionInfo":{"status":"ok","timestamp":1723576961655,"user_tz":300,"elapsed":255,"user":{"displayName":"Maria Alexandra Espinosa Carreno","userId":"05447541284278901609"}}},"execution_count":11,"outputs":[]},{"cell_type":"code","source":["print(f\"El valor de la expresión a=2 ** 11 == 1000 or 2 ** 9 == 100 es {a}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gdU-AdgrLDuO","executionInfo":{"status":"ok","timestamp":1723576964334,"user_tz":300,"elapsed":265,"user":{"displayName":"Maria Alexandra Espinosa Carreno","userId":"05447541284278901609"}},"outputId":"00c84495-cfcb-4691-beba-cf992ba8146d"},"execution_count":12,"outputs":[{"output_type":"stream","name":"stdout","text":["El valor de la expresión a=2 ** 11 == 1000 or 2 ** 9 == 100 es False\n"]}]},{"cell_type":"code","source":["#Colocar un tipo de dato antes del dato, se usa para transformar el\n","#dato dentro del paréntesis en el dato por fuera del paréntesis\n","int(\"cincuenta\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":178},"id":"AlTTO5DxMg_p","executionInfo":{"status":"error","timestamp":1723577090763,"user_tz":300,"elapsed":224,"user":{"displayName":"Maria Alexandra Espinosa Carreno","userId":"05447541284278901609"}},"outputId":"5977df6f-7f4d-4cad-ab98-20a64b5c7850"},"execution_count":14,"outputs":[{"output_type":"error","ename":"ValueError","evalue":"invalid literal for int() with base 10: 'cincuenta'","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-14-9426308c7cf7>\u001b[0m in \u001b[0;36m<cell line: 2>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;31m#Colocar un tipo de dato antes del dato, se usa para transformar el dato dentro del paréntesis en el dato por fuera del paréntesis\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"cincuenta\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mValueError\u001b[0m: invalid literal for int() with base 10: 'cincuenta'"]}]},{"cell_type":"code","source":["int(\"50\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vMhJoVTbM3fQ","executionInfo":{"status":"ok","timestamp":1723577126424,"user_tz":300,"elapsed":216,"user":{"displayName":"Maria Alexandra Espinosa Carreno","userId":"05447541284278901609"}},"outputId":"4e9f4797-e3fa-4b54-c08b-3932009d89b4"},"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["50"]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["str(\"50\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"p5atll4ONEaP","executionInfo":{"status":"ok","timestamp":1723577176433,"user_tz":300,"elapsed":245,"user":{"displayName":"Maria Alexandra Espinosa Carreno","userId":"05447541284278901609"}},"outputId":"1946ba9e-4889-4061-b84e-73b2f0b2e65c"},"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'50'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["#Siempre que halla una división, el resultado dará decimal\n","16/16 + 384/24"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JWt7oHDsOClE","executionInfo":{"status":"ok","timestamp":1723577414417,"user_tz":300,"elapsed":211,"user":{"displayName":"Maria Alexandra Espinosa Carreno","userId":"05447541284278901609"}},"outputId":"2f4f5093-87db-4d9d-c781-9b5cf79d1491"},"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["17.0"]},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["type(16/16 + 384/24)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZQfheMw6OXaF","executionInfo":{"status":"ok","timestamp":1723577502291,"user_tz":300,"elapsed":199,"user":{"displayName":"Maria Alexandra Espinosa Carreno","userId":"05447541284278901609"}},"outputId":"e9684abf-ede5-44ed-9e9c-5a5ae6466e2b"},"execution_count":18,"outputs":[{"output_type":"execute_result","data":{"text/plain":["float"]},"metadata":{},"execution_count":18}]},{"cell_type":"code","source":["# % es el módulo de la operación.\n","600 + 18%"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":108},"id":"mXPzQQ8cOy7F","executionInfo":{"status":"error","timestamp":1723577799888,"user_tz":300,"elapsed":197,"user":{"displayName":"Maria Alexandra Espinosa Carreno","userId":"05447541284278901609"}},"outputId":"f23a27b9-fb55-49fb-afa5-7a208381cb97"},"execution_count":21,"outputs":[{"output_type":"error","ename":"SyntaxError","evalue":"invalid syntax (<ipython-input-21-ed80a26fa863>, line 2)","traceback":["\u001b[0;36m  File \u001b[0;32m\"<ipython-input-21-ed80a26fa863>\"\u001b[0;36m, line \u001b[0;32m2\u001b[0m\n\u001b[0;31m    600 + 18%\u001b[0m\n\u001b[0m             ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"]}]},{"cell_type":"code","source":["0 < (4096 % 10) < 6"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pDr1UoVRP9vi","executionInfo":{"status":"ok","timestamp":1723577990194,"user_tz":300,"elapsed":210,"user":{"displayName":"Maria Alexandra Espinosa Carreno","userId":"05447541284278901609"}},"outputId":"3e416893-1b84-4ae3-c037-bb1602e1aee5"},"execution_count":22,"outputs":[{"output_type":"execute_result","data":{"text/plain":["False"]},"metadata":{},"execution_count":22}]},{"cell_type":"code","source":["'Max' + 'Min'"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"dGEYZHoGQcHH","executionInfo":{"status":"ok","timestamp":1723578043146,"user_tz":300,"elapsed":195,"user":{"displayName":"Maria Alexandra Espinosa Carreno","userId":"05447541284278901609"}},"outputId":"336aa354-6ab0-4b3c-9938-1b40701d521d"},"execution_count":23,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'MaxMin'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":23}]},{"cell_type":"code","source":["float(-int(\"7\")+int('90))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":108},"id":"nlaP4RolSV9K","executionInfo":{"status":"error","timestamp":1723578543708,"user_tz":300,"elapsed":218,"user":{"displayName":"Maria Alexandra Espinosa Carreno","userId":"05447541284278901609"}},"outputId":"0cb42d2b-eba3-4e08-a735-ce87c49aaf4a"},"execution_count":25,"outputs":[{"output_type":"error","ename":"SyntaxError","evalue":"unterminated string literal (detected at line 1) (<ipython-input-25-c81e33bedfc5>, line 1)","traceback":["\u001b[0;36m  File \u001b[0;32m\"<ipython-input-25-c81e33bedfc5>\"\u001b[0;36m, line \u001b[0;32m1\u001b[0m\n\u001b[0;31m    float(-int(\"7\")+int('90))\u001b[0m\n\u001b[0m                        ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m unterminated string literal (detected at line 1)\n"]}]},{"cell_type":"code","source":["#ABC() es una función no definida\n","ABC() * DEF()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"iIbIxBseQnXf","executionInfo":{"status":"error","timestamp":1723578405859,"user_tz":300,"elapsed":237,"user":{"displayName":"Maria Alexandra Espinosa Carreno","userId":"05447541284278901609"}},"outputId":"f1a42561-1dcd-4f1d-98c7-07444baad104"},"execution_count":24,"outputs":[{"output_type":"error","ename":"NameError","evalue":"name 'ABC' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-24-b03c5ee783c9>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mABC\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m*\u001b[0m \u001b[0mDEF\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mNameError\u001b[0m: name 'ABC' is not defined"]}]},{"cell_type":"markdown","source":["abs(len('seis') - len('tres'))\n","\n","1. abs = valor absoluto.\n","2. len = cuenta la cantidad de letras de un string\n","\n","- len('seis')=4\n","- len('tres')=4"],"metadata":{"id":"izOoXvg8TBvI"}},{"cell_type":"code","source":["abs(len('seis') - len('tres'))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0jZ65Xb3T568","executionInfo":{"status":"ok","timestamp":1723578993891,"user_tz":300,"elapsed":220,"user":{"displayName":"Maria Alexandra Espinosa Carreno","userId":"05447541284278901609"}},"outputId":"9d9b51dc-6a09-4fba-a65b-af27f01f60d1"},"execution_count":28,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0"]},"metadata":{},"execution_count":28}]},{"cell_type":"code","source":["#Todos los números a excepción de 0, da true\n","#al convertirlos a booleanos\n","bool(1210) or bool(-3465)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"12mjxLEkUPe1","executionInfo":{"status":"ok","timestamp":1723579059907,"user_tz":300,"elapsed":220,"user":{"displayName":"Maria Alexandra Espinosa Carreno","userId":"05447541284278901609"}},"outputId":"5bf8aa26-7c3b-4d4d-eded-2f06c62855b6"},"execution_count":30,"outputs":[{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{},"execution_count":30}]},{"cell_type":"code","source":["int('8' * 3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"O2-JqOXlU_8N","executionInfo":{"status":"ok","timestamp":1723579278791,"user_tz":300,"elapsed":235,"user":{"displayName":"Maria Alexandra Espinosa Carreno","userId":"05447541284278901609"}},"outputId":"5745dc31-ff15-4b51-8d2e-60133944078d"},"execution_count":31,"outputs":[{"output_type":"execute_result","data":{"text/plain":["888"]},"metadata":{},"execution_count":31}]},{"cell_type":"code","source":["int('8' * 3) / 3"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Xz7GWO6tVSvJ","executionInfo":{"status":"ok","timestamp":1723579318336,"user_tz":300,"elapsed":270,"user":{"displayName":"Maria Alexandra Espinosa Carreno","userId":"05447541284278901609"}},"outputId":"6322c811-b6c0-4f04-bbf2-4479cfd7ff7a"},"execution_count":32,"outputs":[{"output_type":"execute_result","data":{"text/plain":["296.0"]},"metadata":{},"execution_count":32}]},{"cell_type":"code","source":["str(296.0)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"Nl_v1tS0VcDE","executionInfo":{"status":"ok","timestamp":1723579358144,"user_tz":300,"elapsed":203,"user":{"displayName":"Maria Alexandra Espinosa Carreno","userId":"05447541284278901609"}},"outputId":"128b98d9-407a-4777-9c7b-d2a166402df8"},"execution_count":33,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'296.0'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":33}]},{"cell_type":"code","source":["#Todos los string son listas, por ende, podemos\n","#conocer la posición de cada uno de sus elementos\n","#En python se empieza contando desde 0\n","str(296.0)[3]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"4ComFOEDVvbq","executionInfo":{"status":"ok","timestamp":1723579538364,"user_tz":300,"elapsed":205,"user":{"displayName":"Maria Alexandra Espinosa Carreno","userId":"05447541284278901609"}},"outputId":"5ed3512f-102f-405e-a1b5-9e57af99d622"},"execution_count":36,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'.'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":36}]},{"cell_type":"code","source":["float(str(int('8' * 3) / 3)[3])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"cKEcduzpViVD","executionInfo":{"status":"error","timestamp":1723579412273,"user_tz":300,"elapsed":217,"user":{"displayName":"Maria Alexandra Espinosa Carreno","userId":"05447541284278901609"}},"outputId":"fe16ee58-0ec9-4079-e18a-7db6bca8854a"},"execution_count":34,"outputs":[{"output_type":"error","ename":"ValueError","evalue":"could not convert string to float: '.'","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-34-bafabcb87d9b>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mfloat\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mstr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'8'\u001b[0m \u001b[0;34m*\u001b[0m \u001b[0;36m3\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m/\u001b[0m \u001b[0;36m3\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m3\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mValueError\u001b[0m: could not convert string to float: '.'"]}]}]}